{"ast":null,"code":"import _slicedToArray from\"D:/EVA/EVA-SCORM/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useRef,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var AudioPlayer=function AudioPlayer(_ref){var src=_ref.src;var audioRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isPlaying=_useState2[0],setIsPlaying=_useState2[1];var handlePlay=function handlePlay(){if(audioRef.current.paused){audioRef.current.play().then(function(){setIsPlaying(true);});}};var handlePause=function handlePause(){if(!audioRef.current.paused){audioRef.current.pause();setIsPlaying(false);}};var handleStop=function handleStop(){if(!audioRef.current.paused){audioRef.current.pause();audioRef.current.currentTime=0;setIsPlaying(false);}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"audio\",{controls:true,children:/*#__PURE__*/_jsx(\"source\",{src:src,type:\"audio/mpeg\"})})});};export default AudioPlayer;","map":{"version":3,"names":["React","useRef","useState","jsx","_jsx","AudioPlayer","_ref","src","audioRef","_useState","_useState2","_slicedToArray","isPlaying","setIsPlaying","handlePlay","current","paused","play","then","handlePause","pause","handleStop","currentTime","children","controls","type"],"sources":["D:/EVA/EVA-SCORM/src/components/audioPlayer.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\n\r\nconst AudioPlayer = ({ src }) => {\r\n  const audioRef = useRef(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const handlePlay = () => {\r\n    if (audioRef.current.paused) {\r\n      audioRef.current.play().then(() => {\r\n        setIsPlaying(true);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePause = () => {\r\n    if (!audioRef.current.paused) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  const handleStop = () => {\r\n    if (!audioRef.current.paused) {\r\n      audioRef.current.pause();\r\n      audioRef.current.currentTime = 0;\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <audio controls>\r\n        <source src={src} type=\"audio/mpeg\" />\r\n      </audio>\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default AudioPlayer;"],"mappings":"sGAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhD,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAAC,IAAA,CAAgB,IAAV,CAAAC,GAAG,CAAAD,IAAA,CAAHC,GAAG,CACxB,GAAM,CAAAC,QAAQ,CAAGP,MAAM,CAAC,IAAI,CAAC,CAC7B,IAAAQ,SAAA,CAAkCP,QAAQ,CAAC,KAAK,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA1CG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAE9B,GAAM,CAAAI,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACvB,GAAIN,QAAQ,CAACO,OAAO,CAACC,MAAM,CAAE,CAC3BR,QAAQ,CAACO,OAAO,CAACE,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,UAAM,CACjCL,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAAC,CACJ,CACF,CAAC,CAED,GAAM,CAAAM,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxB,GAAI,CAACX,QAAQ,CAACO,OAAO,CAACC,MAAM,CAAE,CAC5BR,QAAQ,CAACO,OAAO,CAACK,KAAK,CAAC,CAAC,CACxBP,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED,GAAM,CAAAQ,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACvB,GAAI,CAACb,QAAQ,CAACO,OAAO,CAACC,MAAM,CAAE,CAC5BR,QAAQ,CAACO,OAAO,CAACK,KAAK,CAAC,CAAC,CACxBZ,QAAQ,CAACO,OAAO,CAACO,WAAW,CAAG,CAAC,CAChCT,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED,mBACET,IAAA,QAAAmB,QAAA,cACEnB,IAAA,UAAOoB,QAAQ,MAAAD,QAAA,cACbnB,IAAA,WAAQG,GAAG,CAAEA,GAAI,CAACkB,IAAI,CAAC,YAAY,CAAE,CAAC,CACjC,CAAC,CACL,CAAC,CAGV,CAAC,CAED,cAAe,CAAApB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}